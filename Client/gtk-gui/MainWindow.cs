
// This file has been generated by the GUI designer. Do not modify.

public partial class MainWindow
{
	private global::Gtk.UIManager UIManager;
	private global::Gtk.Action FileAction;
	private global::Gtk.Action OpenFileAction;
	private global::Gtk.Action closeAction;
	private global::Gtk.Action ConnectAction;
	private global::Gtk.Action quitAction;
	private global::Gtk.Action ToolsAction;
	private global::Gtk.Action recordAction;
	private global::Gtk.Action RemoteFXAction;
	private global::Gtk.Action HelpAction;
	private global::Gtk.Action aboutAction;
	private global::Gtk.Action FreeRDPAction;
	private global::Gtk.Action ModeAction;
	private global::Gtk.Action SenderAction;
	private global::Gtk.Action ReceiverAction;
	private global::Gtk.Action CreateSessionAction;
	private global::Gtk.Action JoinSessionAction;
	private global::Gtk.Action DocumentationAction;
	private global::Gtk.Action ConnectAction1;
	private global::Gtk.Action EndSessionAction;
	private global::Gtk.Action LeaveSessionAction;
	private global::Gtk.Action EndSessionAction1;
	private global::Gtk.Action LeaveSessionAction1;
	private global::Gtk.VBox mainVbox;
	private global::Gtk.VBox vbox1;
	private global::Gtk.MenuBar menubar1;
	private global::Gtk.DrawingArea mainDrawingArea;
    
	protected virtual void Build ()
	{
		global::Stetic.Gui.Initialize (this);
		// Widget MainWindow
		this.UIManager = new global::Gtk.UIManager ();
		global::Gtk.ActionGroup w1 = new global::Gtk.ActionGroup ("Default");
		this.FileAction = new global::Gtk.Action ("FileAction", global::Mono.Unix.Catalog.GetString ("File"), null, null);
		this.FileAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("File");
		w1.Add (this.FileAction, "<Alt>f");
		this.OpenFileAction = new global::Gtk.Action ("OpenFileAction", global::Mono.Unix.Catalog.GetString ("Open File"), null, null);
		this.OpenFileAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Open");
		w1.Add (this.OpenFileAction, "<Control>o");
		this.closeAction = new global::Gtk.Action ("closeAction", global::Mono.Unix.Catalog.GetString ("Close"), null, null);
		this.closeAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Close");
		w1.Add (this.closeAction, "<Control>s");
		this.ConnectAction = new global::Gtk.Action ("ConnectAction", global::Mono.Unix.Catalog.GetString ("Connect"), null, null);
		this.ConnectAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Connect");
		w1.Add (this.ConnectAction, "<Control>c");
		this.quitAction = new global::Gtk.Action ("quitAction", global::Mono.Unix.Catalog.GetString ("Quit"), null, null);
		this.quitAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Quit");
		w1.Add (this.quitAction, "<Control>q");
		this.ToolsAction = new global::Gtk.Action ("ToolsAction", global::Mono.Unix.Catalog.GetString ("Tools"), null, null);
		this.ToolsAction.HideIfEmpty = false;
		this.ToolsAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Tools");
		w1.Add (this.ToolsAction, "<Alt>t");
		this.recordAction = new global::Gtk.Action ("recordAction", global::Mono.Unix.Catalog.GetString ("Record"), null, null);
		this.recordAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Record");
		w1.Add (this.recordAction, "<Control>r");
		this.RemoteFXAction = new global::Gtk.Action ("RemoteFXAction", global::Mono.Unix.Catalog.GetString ("RemoteFX"), null, null);
		this.RemoteFXAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("RemoteFX");
		w1.Add (this.RemoteFXAction, null);
		this.HelpAction = new global::Gtk.Action ("HelpAction", global::Mono.Unix.Catalog.GetString ("Help"), null, null);
		this.HelpAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Help");
		w1.Add (this.HelpAction, "<Alt>h");
		this.aboutAction = new global::Gtk.Action ("aboutAction", global::Mono.Unix.Catalog.GetString ("About"), null, null);
		this.aboutAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("About");
		w1.Add (this.aboutAction, "<Control>a");
		this.FreeRDPAction = new global::Gtk.Action ("FreeRDPAction", global::Mono.Unix.Catalog.GetString ("FreeRDP"), null, null);
		this.FreeRDPAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("FreeRDP");
		w1.Add (this.FreeRDPAction, null);
		this.ModeAction = new global::Gtk.Action ("ModeAction", global::Mono.Unix.Catalog.GetString ("Mode"), null, null);
		this.ModeAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Mode");
		w1.Add (this.ModeAction, null);
		this.SenderAction = new global::Gtk.Action ("SenderAction", global::Mono.Unix.Catalog.GetString ("Sender"), null, null);
		this.SenderAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Sender");
		w1.Add (this.SenderAction, null);
		this.ReceiverAction = new global::Gtk.Action ("ReceiverAction", global::Mono.Unix.Catalog.GetString ("Receiver"), null, null);
		this.ReceiverAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Receiver");
		w1.Add (this.ReceiverAction, null);
		this.CreateSessionAction = new global::Gtk.Action ("CreateSessionAction", global::Mono.Unix.Catalog.GetString ("Create Session"), null, null);
		this.CreateSessionAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Create Session");
		w1.Add (this.CreateSessionAction, null);
		this.JoinSessionAction = new global::Gtk.Action ("JoinSessionAction", global::Mono.Unix.Catalog.GetString ("Join Session"), null, null);
		this.JoinSessionAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Join Session");
		w1.Add (this.JoinSessionAction, null);
		this.DocumentationAction = new global::Gtk.Action ("DocumentationAction", global::Mono.Unix.Catalog.GetString ("Documentation"), null, null);
		this.DocumentationAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Documentation");
		w1.Add (this.DocumentationAction, null);
		this.ConnectAction1 = new global::Gtk.Action ("ConnectAction1", global::Mono.Unix.Catalog.GetString ("Connect"), null, null);
		this.ConnectAction1.ShortLabel = global::Mono.Unix.Catalog.GetString ("Connect");
		w1.Add (this.ConnectAction1, null);
		this.EndSessionAction = new global::Gtk.Action ("EndSessionAction", global::Mono.Unix.Catalog.GetString ("End Session"), null, null);
		this.EndSessionAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("End Session");
		w1.Add (this.EndSessionAction, null);
		this.LeaveSessionAction = new global::Gtk.Action ("LeaveSessionAction", global::Mono.Unix.Catalog.GetString ("Leave Session"), null, null);
		this.LeaveSessionAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Leave Session");
		w1.Add (this.LeaveSessionAction, null);
		this.EndSessionAction1 = new global::Gtk.Action ("EndSessionAction1", global::Mono.Unix.Catalog.GetString ("End Session"), null, null);
		this.EndSessionAction1.ShortLabel = global::Mono.Unix.Catalog.GetString ("End Session");
		w1.Add (this.EndSessionAction1, null);
		this.LeaveSessionAction1 = new global::Gtk.Action ("LeaveSessionAction1", global::Mono.Unix.Catalog.GetString ("Leave Session"), null, null);
		this.LeaveSessionAction1.ShortLabel = global::Mono.Unix.Catalog.GetString ("Leave Session");
		w1.Add (this.LeaveSessionAction1, null);
		this.UIManager.InsertActionGroup (w1, 0);
		this.AddAccelGroup (this.UIManager.AccelGroup);
		this.Name = "MainWindow";
		this.Title = global::Mono.Unix.Catalog.GetString ("Screenary");
		this.Icon = global::Stetic.IconLoader.LoadIcon (this, "gtk-go-forward", global::Gtk.IconSize.Menu);
		this.WindowPosition = ((global::Gtk.WindowPosition)(4));
		// Container child MainWindow.Gtk.Container+ContainerChild
		this.mainVbox = new global::Gtk.VBox ();
		this.mainVbox.Name = "mainVbox";
		this.mainVbox.Spacing = 6;
		// Container child mainVbox.Gtk.Box+BoxChild
		this.vbox1 = new global::Gtk.VBox ();
		this.vbox1.Name = "vbox1";
		this.vbox1.Spacing = 6;
		// Container child vbox1.Gtk.Box+BoxChild
		this.UIManager.AddUiFromString ("<ui><menubar name='menubar1'><menu name='FileAction' action='FileAction'><menuitem name='OpenFileAction' action='OpenFileAction'/><menuitem name='ConnectAction1' action='ConnectAction1'/><menu name='ModeAction' action='ModeAction'><menuitem name='SenderAction' action='SenderAction'/><menuitem name='ReceiverAction' action='ReceiverAction'/></menu><menuitem name='quitAction' action='quitAction'/></menu><menu name='ToolsAction' action='ToolsAction'><menuitem name='CreateSessionAction' action='CreateSessionAction'/><menuitem name='EndSessionAction1' action='EndSessionAction1'/><menuitem name='JoinSessionAction' action='JoinSessionAction'/><menuitem name='LeaveSessionAction1' action='LeaveSessionAction1'/><menuitem name='recordAction' action='recordAction'/><menuitem name='RemoteFXAction' action='RemoteFXAction'/><menuitem name='FreeRDPAction' action='FreeRDPAction'/></menu><menu name='HelpAction' action='HelpAction'><menuitem name='aboutAction' action='aboutAction'/><menuitem name='DocumentationAction' action='DocumentationAction'/></menu></menubar></ui>");
		this.menubar1 = ((global::Gtk.MenuBar)(this.UIManager.GetWidget ("/menubar1")));
		this.menubar1.CanDefault = true;
		this.menubar1.Events = ((global::Gdk.EventMask)(2));
		this.menubar1.Name = "menubar1";
		this.vbox1.Add (this.menubar1);
		global::Gtk.Box.BoxChild w2 = ((global::Gtk.Box.BoxChild)(this.vbox1 [this.menubar1]));
		w2.Position = 0;
		w2.Expand = false;
		w2.Fill = false;
		// Container child vbox1.Gtk.Box+BoxChild
		this.mainDrawingArea = new global::Gtk.DrawingArea ();
		this.mainDrawingArea.Name = "mainDrawingArea";
		this.vbox1.Add (this.mainDrawingArea);
		global::Gtk.Box.BoxChild w3 = ((global::Gtk.Box.BoxChild)(this.vbox1 [this.mainDrawingArea]));
		w3.Position = 1;
		this.mainVbox.Add (this.vbox1);
		global::Gtk.Box.BoxChild w4 = ((global::Gtk.Box.BoxChild)(this.mainVbox [this.vbox1]));
		w4.Position = 0;
		this.Add (this.mainVbox);
		if ((this.Child != null)) {
			this.Child.ShowAll ();
		}
		this.DefaultWidth = 1026;
		this.DefaultHeight = 829;
		this.menubar1.HasDefault = true;
		this.Show ();
		this.DeleteEvent += new global::Gtk.DeleteEventHandler (this.OnDeleteEvent);
		this.ExposeEvent += new global::Gtk.ExposeEventHandler (this.OnExposeEvent);
		this.OpenFileAction.Activated += new global::System.EventHandler (this.OnOpenActionActivated);
		this.closeAction.Activated += new global::System.EventHandler (this.OnCloseActionActivated);
		this.ConnectAction.Activated += new global::System.EventHandler (this.OnConnectActionActivated);
		this.quitAction.Activated += new global::System.EventHandler (this.OnQuitActionActivated);
		this.recordAction.Activated += new global::System.EventHandler (this.OnRecordActionActivated);
		this.RemoteFXAction.Activated += new global::System.EventHandler (this.OnRemoteFXActionActivated);
		this.aboutAction.Activated += new global::System.EventHandler (this.OnAboutActionActivated);
		this.FreeRDPAction.Activated += new global::System.EventHandler (this.OnFreeRDPActionActivated);
		this.SenderAction.Activated += new global::System.EventHandler (this.OnSenderActionActivated);
		this.ReceiverAction.Activated += new global::System.EventHandler (this.OnReceiverActionActivated);
		this.CreateSessionAction.Activated += new global::System.EventHandler (this.OnCreateSessionActionActivated);
		this.JoinSessionAction.Activated += new global::System.EventHandler (this.OnJoinSessionActionActivated);
		this.ConnectAction1.Activated += new global::System.EventHandler (this.OnConnectAction1Activated);
		this.EndSessionAction.Activated += new global::System.EventHandler (this.OnEndSessionActionActivated);
		this.LeaveSessionAction.Activated += new global::System.EventHandler (this.OnLeaveSessionActionActivated);
		this.EndSessionAction1.Activated += new global::System.EventHandler (this.OnEndSessionAction1Activated);
		this.LeaveSessionAction1.Activated += new global::System.EventHandler (this.OnLeaveSessionAction1Activated);
		this.mainDrawingArea.ExposeEvent += new global::Gtk.ExposeEventHandler (this.OnMainDrawingAreaExposeEvent);
	}
}
